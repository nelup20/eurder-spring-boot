(this["webpackJsonpeurder-frontend"]=this["webpackJsonpeurder-frontend"]||[]).push([[0],{14:function(e,s,t){},19:function(e,s,t){},20:function(e,s,t){"use strict";t.r(s);var a=t(0),i=t(2),c=t.n(i),n=t(4),l=t.n(n),r=(t(14),t(5)),d=t(6),h=t(8),o=t(7),j=(t(15),t(1)),m=(t(19),function(e){Object(h.a)(t,e);var s=Object(o.a)(t);function t(){var e;Object(r.a)(this,t);for(var a=arguments.length,i=new Array(a),c=0;c<a;c++)i[c]=arguments[c];return(e=s.call.apply(s,[this].concat(i))).EMAIL_REGEX=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,e.state={section1:{inputs:{firstName:"Tom",lastName:"Doe",emailAddress:"tom@tom.com",address:"Tom doe street 22",phoneNumber:"012345678"},isEmailValid:!0}},e.highlightInputIfEmpty=function(s,t){return 0!==e.state[s].inputs[t].length?" is-success":" is-danger"},e.displayHelperMessageIfInputEmpty=function(s,t){return 0!==e.state[s].inputs[t].length?" is-hidden":" is-danger"},e.createCustomer=function(){console.log("I got clicked!")},e.handleInputChange=function(s){var t=s.target.name,a=s.target.value,i=e.state;"emailAddress"===t&&(i.section1.isEmailValid=e.EMAIL_REGEX.test(a)),i.section1.inputs[t]=a,e.setState(i)},e}return Object(d.a)(t,[{key:"render",value:function(){return Object(a.jsxs)("div",{className:"container",children:[Object(a.jsx)("img",{src:"order-logo.png",id:"order-logo"}),Object(a.jsx)(j.Section,{children:Object(a.jsxs)(j.Hero,{color:"primary",id:"aboutHero",children:[Object(a.jsx)(j.Heading,{className:"heroHeading",children:"What is this web app for?"}),Object(a.jsxs)(j.Heading,{className:"heroHeading",subtitle:!0,size:4,children:["This web app was made as a small project in order to practice creating backends with Spring Boot. The purpose of this extremely-minimal frontend made in React (w/ Bulma) is to allow others to easily test the API/endpoints without having to create requests using various tools such as Postman. Below you'll see sections divided by the specific endpoint, with a small description of what the requirements are to create a successful request, as well as what will be expected as a result. ",Object(a.jsx)("br",{}),Object(a.jsx)("br",{})," Most inputs will be pre-filled with the correct data necessary to make a successful request. You can of course modify the input to see what the result will be. If you're not sure what data to use, you can always go and copy-paste the data from the block below which contains the initial data that is loaded when the app starts and will therefore always result in a successful request."]})]})}),Object(a.jsxs)(j.Section,{children:[Object(a.jsx)(j.Heading,{children:"Initial data"}),Object(a.jsx)(j.Hero,{className:"has-background-grey-lighter",id:"initialDataHero",children:Object(a.jsxs)(j.Hero.Body,{className:"is-size-5",children:[Object(a.jsxs)("div",{children:[Object(a.jsx)("span",{className:"has-text-weight-bold",children:"Admin ID:"})," de6def71-53ca-4e5e-85ef-9ed3ab598391"]}),Object(a.jsxs)("div",{children:[Object(a.jsx)("span",{className:"has-text-weight-bold",children:"Customer ID:"})," c6093628-b11a-4ece-b2f0-509fc0f3c132"]}),Object(a.jsxs)("div",{children:[Object(a.jsx)("span",{className:"has-text-weight-bold",children:"Item #1 ID:"})," 44492ce0-dfca-49f5-b519-0bf2839f2d64"]}),Object(a.jsxs)("div",{children:[Object(a.jsx)("span",{className:"has-text-weight-bold",children:"Item #2 ID:"})," bc23cbd0-fc7a-404d-a473-39711a0f7c7c"]}),Object(a.jsxs)("div",{children:[Object(a.jsx)("span",{className:"has-text-weight-bold",children:"Item #3 ID:"})," b79533d1-3b13-47e8-9efb-7c96bb9245c4"]}),Object(a.jsxs)("div",{children:[Object(a.jsx)("span",{className:"has-text-weight-bold",children:"Item #4 ID:"})," c0b6efc9-ed65-448d-a06e-21a1ed4b48c8"]})]})})]}),Object(a.jsxs)(j.Section,{children:[Object(a.jsx)(j.Heading,{children:"#1 - Create a customer account: POST request to /customers"}),Object(a.jsxs)("div",{className:"endpointSectionBody",children:[Object(a.jsxs)("div",{className:"endpointSectionBody-inputSide",children:[Object(a.jsxs)("div",{className:"field",children:[Object(a.jsx)("label",{className:"label",children:"Customer's first name"}),Object(a.jsxs)("div",{className:"control",children:[Object(a.jsx)("input",{type:"text",className:"input"+this.highlightInputIfEmpty("section1","firstName"),value:this.state.section1.inputs.firstName,onChange:this.handleInputChange,name:"firstName",placeholder:"John"}),Object(a.jsx)("p",{className:"help "+this.displayHelperMessageIfInputEmpty("section1","firstName"),children:"First name can't be empty"})]})]}),Object(a.jsxs)("div",{className:"field",children:[Object(a.jsx)("label",{className:"label",children:"Customer's last name"}),Object(a.jsxs)("div",{className:"control",children:[Object(a.jsx)("input",{type:"text",className:"input"+this.highlightInputIfEmpty("section1","lastName"),value:this.state.section1.inputs.lastName,onChange:this.handleInputChange,name:"lastName",placeholder:"Doe"}),Object(a.jsx)("p",{className:"help "+this.displayHelperMessageIfInputEmpty("section1","lastName"),children:"Last name can't be empty"})]})]}),Object(a.jsxs)("div",{className:"field",children:[Object(a.jsx)("label",{className:"label",children:"Customer's email"}),Object(a.jsxs)("div",{className:"control",children:[Object(a.jsx)("input",{type:"email",className:"input "+(this.state.section1.isEmailValid?" is-success":" is-danger"),value:this.state.section1.inputs.emailAddress,onChange:this.handleInputChange,name:"emailAddress",placeholder:"john@doe.com"}),Object(a.jsx)("p",{className:"help "+(this.state.section1.isEmailValid?" is-hidden":" is-danger"),children:"This email is invalid"})]})]}),Object(a.jsxs)("div",{className:"field",children:[Object(a.jsx)("label",{className:"label",children:"Customer's address"}),Object(a.jsxs)("div",{className:"control",children:[Object(a.jsx)("input",{type:"text",className:"input"+this.highlightInputIfEmpty("section1","address"),value:this.state.section1.inputs.address,onChange:this.handleInputChange,name:"address",placeholder:"John doe street 23"}),Object(a.jsx)("p",{className:"help "+this.displayHelperMessageIfInputEmpty("section1","address"),children:"Address can't be empty"})]})]}),Object(a.jsxs)("div",{className:"field",children:[Object(a.jsx)("label",{className:"label",children:"Customer's phone number"}),Object(a.jsxs)("div",{className:"control",children:[Object(a.jsx)("input",{type:"text",className:"input"+this.highlightInputIfEmpty("section1","phoneNumber"),value:this.state.section1.inputs.phoneNumber,onChange:this.handleInputChange,name:"phoneNumber",placeholder:"012345678"}),Object(a.jsx)("p",{className:"help "+this.displayHelperMessageIfInputEmpty("section1","phoneNumber"),children:"Phone number can't be empty"})]})]}),Object(a.jsx)("div",{className:"field",children:Object(a.jsx)("div",{className:"control",children:Object(a.jsx)("button",{className:"button is-primary",onClick:this.createCustomer,children:"Create"})})})]}),Object(a.jsx)(j.Hero,{className:"has-background-grey-lighter endpointSectionBody-descriptionSide",id:"initialDataHero",children:Object(a.jsxs)(j.Hero.Body,{className:"is-size-5",children:[Object(a.jsxs)("div",{children:[Object(a.jsx)("span",{className:"has-text-weight-bold",children:"Requirements:"})," JSON payload in the body with the following fields and their required types:",Object(a.jsxs)("ul",{children:[Object(a.jsx)("li",{children:"firstName: String"}),Object(a.jsx)("li",{children:"lastName: String"}),Object(a.jsx)("li",{children:"emailAddress: String"}),Object(a.jsx)("li",{children:"address: String"}),Object(a.jsx)("li",{children:"phoneNumber: String"})]})]}),Object(a.jsx)("br",{}),Object(a.jsxs)("div",{children:[Object(a.jsx)("span",{className:"has-text-weight-bold",children:"Expected Response:"})," JSON object of the newly created customer"]})]})})]})]})]})}}]),t}(c.a.Component));l.a.render(Object(a.jsx)(c.a.StrictMode,{children:Object(a.jsx)(m,{})}),document.getElementById("root"))}},[[20,1,2]]]);
//# sourceMappingURL=main.b7bde43a.chunk.js.map